// Example project data for the API builder/editor
// This file exports exampleProjectData for use in ProjectEditorPage and elsewhere

import { Node, Edge } from "reactflow";

export interface ProjectData {
  id: string;
  name: string;
  type: "rest-api" | "graphql" | "websocket";
  template: string;
  nodes?: Node[];
  edges?: Edge[];
}

const exampleProjectData: Record<string, ProjectData> = {
  example_chatbot: {
    id: "example_chatbot",
    name: "Chatbot API",
    type: "rest-api",
    template: "chatbot-template",
    nodes: [
      // 8 endpoint nodes
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 100 },
        data: {
          label: "GET /chat",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get chat messages",
          icon: "Download",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 100, y: 200 },
        data: {
          label: "POST /chat",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Send chat message",
          icon: "Upload",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "3",
        type: "apiNode",
        position: { x: 100, y: 300 },
        data: {
          label: "GET /users",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get users",
          icon: "User",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "4",
        type: "apiNode",
        position: { x: 100, y: 400 },
        data: {
          label: "POST /users",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Create user",
          icon: "UserPlus",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "5",
        type: "apiNode",
        position: { x: 100, y: 500 },
        data: {
          label: "GET /analytics",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get analytics",
          icon: "BarChart",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "6",
        type: "apiNode",
        position: { x: 100, y: 600 },
        data: {
          label: "POST /feedback",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Send feedback",
          icon: "MessageCircle",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "7",
        type: "apiNode",
        position: { x: 100, y: 700 },
        data: {
          label: "GET /admin/logs",
          type: "endpoint-get",
          category: "Endpoints",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "8",
        type: "apiNode",
        position: { x: 100, y: 800 },
        data: {
          label: "POST /admin/ban",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Ban user",
          icon: "Ban",
          color: "bg-red-400",
          inputs: 0,
          outputs: 1,
        },
      },
      // 1 middleware
      {
        id: "9",
        type: "apiNode",
        position: { x: 350, y: 400 },
        data: {
          label: "Auth Middleware",
          type: "middleware-auth",
          category: "Middleware",
          description: "Authentication",
          icon: "Shield",
          color: "bg-yellow-400",
          inputs: 8,
          outputs: 1,
        },
      },
      // 1 bot logic
      {
        id: "10",
        type: "apiNode",
        position: { x: 600, y: 400 },
        data: {
          label: "AI Bot Logic",
          type: "external-api",
          category: "External",
          description: "Bot response logic",
          icon: "Bot",
          color: "bg-purple-400",
          inputs: 1,
          outputs: 1,
        },
      },
    ],
    edges: [
      // Connect all endpoints to middleware
      {
        id: "e1-9",
        source: "1",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e2-9",
        source: "2",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-1",
      },
      {
        id: "e3-9",
        source: "3",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-2",
      },
      {
        id: "e4-9",
        source: "4",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-3",
      },
      {
        id: "e5-9",
        source: "5",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-4",
      },
      {
        id: "e6-9",
        source: "6",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-5",
      },
      {
        id: "e7-9",
        source: "7",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-6",
      },
      {
        id: "e8-9",
        source: "8",
        target: "9",
        sourceHandle: "output-0",
        targetHandle: "input-7",
      },
      // Middleware to bot logic
      {
        id: "e9-10",
        source: "9",
        target: "10",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
    ],
  },
  // Add more diverse examples:
  example_finance_tracker: {
    id: "example_finance_tracker",
    name: "Finance Tracker API",
    type: "rest-api",
    template: "finance-template",
    nodes: [
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 200 },
        data: {
          label: "GET /transactions",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get transactions",
          icon: "List",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 100, y: 300 },
        data: {
          label: "POST /transactions",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Add transaction",
          icon: "Plus",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "3",
        type: "apiNode",
        position: { x: 100, y: 400 },
        data: {
          label: "GET /reports",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get reports",
          icon: "BarChart",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "4",
        type: "apiNode",
        position: { x: 350, y: 300 },
        data: {
          label: "Auth Middleware",
          type: "middleware-auth",
          category: "Middleware",
          description: "Authentication",
          icon: "Shield",
          color: "bg-yellow-400",
          inputs: 3,
          outputs: 1,
        },
      },
      {
        id: "5",
        type: "apiNode",
        position: { x: 600, y: 300 },
        data: {
          label: "DB",
          type: "database",
          category: "Database",
          description: "Finance DB",
          icon: "Database",
          color: "bg-orange-400",
          inputs: 1,
          outputs: 1,
        },
      },
    ],
    edges: [
      {
        id: "e1-4",
        source: "1",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e2-4",
        source: "2",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-1",
      },
      {
        id: "e3-4",
        source: "3",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-2",
      },
      {
        id: "e4-5",
        source: "4",
        target: "5",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
    ],
  },
  example_finance: {
    id: "example_finance",
    name: "Enterprise Finance Suite",
    type: "rest-api",
    template: "finance-template",
    nodes: [
      // Endpoints
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 100 },
        data: {
          label: "GET /accounts",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get accounts",
          icon: "Users",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 100, y: 180 },
        data: {
          label: "POST /accounts",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Create account",
          icon: "UserPlus",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "3",
        type: "apiNode",
        position: { x: 100, y: 260 },
        data: {
          label: "GET /transactions",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get transactions",
          icon: "List",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "4",
        type: "apiNode",
        position: { x: 100, y: 340 },
        data: {
          label: "POST /transactions",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Add transaction",
          icon: "Plus",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "5",
        type: "apiNode",
        position: { x: 100, y: 420 },
        data: {
          label: "GET /budgets",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get budgets",
          icon: "PieChart",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "6",
        type: "apiNode",
        position: { x: 100, y: 500 },
        data: {
          label: "POST /budgets",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Create budget",
          icon: "Plus",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "7",
        type: "apiNode",
        position: { x: 100, y: 580 },
        data: {
          label: "GET /analytics",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get analytics",
          icon: "BarChart",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "8",
        type: "apiNode",
        position: { x: 100, y: 660 },
        data: {
          label: "GET /audit",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get audit logs",
          icon: "FileText",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "9",
        type: "apiNode",
        position: { x: 100, y: 740 },
        data: {
          label: "POST /admin/ban",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Ban user",
          icon: "Ban",
          color: "bg-red-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "10",
        type: "apiNode",
        position: { x: 100, y: 820 },
        data: {
          label: "GET /admin/users",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Admin: get users",
          icon: "User",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "11",
        type: "apiNode",
        position: { x: 100, y: 900 },
        data: {
          label: "POST /admin/notify",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Admin: send notification",
          icon: "Bell",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "12",
        type: "apiNode",
        position: { x: 100, y: 980 },
        data: {
          label: "GET /reports",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get reports",
          icon: "BarChart",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      // Middleware
      {
        id: "13",
        type: "apiNode",
        position: { x: 350, y: 540 },
        data: {
          label: "Auth Middleware",
          type: "middleware-auth",
          category: "Middleware",
          description: "Authentication",
          icon: "Shield",
          color: "bg-yellow-400",
          inputs: 12,
          outputs: 1,
        },
      },
      {
        id: "14",
        type: "apiNode",
        position: { x: 500, y: 540 },
        data: {
          label: "Audit Middleware",
          type: "middleware-logging",
          category: "Middleware",
          description: "Audit logging",
          icon: "ClipboardList",
          color: "bg-gray-400",
          inputs: 1,
          outputs: 1,
        },
      },
      // Database
      {
        id: "15",
        type: "apiNode",
        position: { x: 700, y: 540 },
        data: {
          label: "Finance DB",
          type: "database",
          category: "Database",
          description: "Main DB",
          icon: "Database",
          color: "bg-orange-400",
          inputs: 1,
          outputs: 1,
        },
      },
      // Analytics
      {
        id: "16",
        type: "apiNode",
        position: { x: 900, y: 540 },
        data: {
          label: "Analytics Engine",
          type: "external-api",
          category: "External",
          description: "Analytics service",
          icon: "BarChart2",
          color: "bg-purple-400",
          inputs: 1,
          outputs: 1,
        },
      },
    ],
    edges: [
      // Connect all endpoints to Auth Middleware
      {
        id: "e1-13",
        source: "1",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e2-13",
        source: "2",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-1",
      },
      {
        id: "e3-13",
        source: "3",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-2",
      },
      {
        id: "e4-13",
        source: "4",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-3",
      },
      {
        id: "e5-13",
        source: "5",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-4",
      },
      {
        id: "e6-13",
        source: "6",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-5",
      },
      {
        id: "e7-13",
        source: "7",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-6",
      },
      {
        id: "e8-13",
        source: "8",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-7",
      },
      {
        id: "e9-13",
        source: "9",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-8",
      },
      {
        id: "e10-13",
        source: "10",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-9",
      },
      {
        id: "e11-13",
        source: "11",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-10",
      },
      {
        id: "e12-13",
        source: "12",
        target: "13",
        sourceHandle: "output-0",
        targetHandle: "input-11",
      },
      // Auth Middleware to Audit Middleware
      {
        id: "e13-14",
        source: "13",
        target: "14",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      // Audit Middleware to DB
      {
        id: "e14-15",
        source: "14",
        target: "15",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      // DB to Analytics
      {
        id: "e15-16",
        source: "15",
        target: "16",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
    ],
  },
  example_social: {
    id: "example_social",
    name: "Social Media API",
    type: "rest-api",
    template: "social-template",
    nodes: [
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 200 },
        data: {
          label: "GET /posts",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get posts",
          icon: "Download",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 100, y: 300 },
        data: {
          label: "POST /posts",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Create post",
          icon: "Upload",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "3",
        type: "apiNode",
        position: { x: 100, y: 400 },
        data: {
          label: "GET /notifications",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get notifications",
          icon: "Bell",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "4",
        type: "apiNode",
        position: { x: 350, y: 300 },
        data: {
          label: "Auth Middleware",
          type: "middleware-auth",
          category: "Middleware",
          description: "Authentication",
          icon: "Shield",
          color: "bg-yellow-400",
          inputs: 3,
          outputs: 1,
        },
      },
      {
        id: "5",
        type: "apiNode",
        position: { x: 600, y: 300 },
        data: {
          label: "DB",
          type: "database",
          category: "Database",
          description: "Social DB",
          icon: "Database",
          color: "bg-orange-400",
          inputs: 1,
          outputs: 1,
        },
      },
    ],
    edges: [
      {
        id: "e1-4",
        source: "1",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e2-4",
        source: "2",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-1",
      },
      {
        id: "e3-4",
        source: "3",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-2",
      },
      {
        id: "e4-5",
        source: "4",
        target: "5",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
    ],
  },
  example_weather: {
    id: "example_weather",
    name: "Weather Data Service",
    type: "rest-api",
    template: "weather-template",
    nodes: [
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 200 },
        data: {
          label: "GET /weather",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get weather info",
          icon: "Download",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 350, y: 200 },
        data: {
          label: "Weather API",
          type: "external-api",
          category: "External",
          description: "External weather provider",
          icon: "Cloud",
          color: "bg-cyan-400",
          inputs: 1,
          outputs: 1,
        },
      },
    ],
    edges: [
      {
        id: "e1-2",
        source: "1",
        target: "2",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
    ],
  },
  example_blog: {
    id: "example_blog",
    name: "Blog Platform API",
    type: "rest-api",
    template: "blog-template",
    nodes: [
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 200 },
        data: {
          label: "GET /posts",
          type: "endpoint-get",
          category: "Endpoints",
          description: "Get blog posts",
          icon: "Download",
          color: "bg-blue-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 350, y: 200 },
        data: {
          label: "POST /posts",
          type: "endpoint-post",
          category: "Endpoints",
          description: "Create blog post",
          icon: "Upload",
          color: "bg-green-400",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "3",
        type: "apiNode",
        position: { x: 600, y: 200 },
        data: {
          label: "Database",
          type: "database",
          category: "Database",
          description: "Blog DB",
          icon: "Database",
          color: "bg-yellow-400",
          inputs: 2,
          outputs: 1,
        },
      },
    ],
    edges: [
      {
        id: "e1-3",
        source: "1",
        target: "3",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e2-3",
        source: "2",
        target: "3",
        sourceHandle: "output-0",
        targetHandle: "input-1",
      },
    ],
  },

  // GraphQL Example Project
  example_graphql_social: {
    id: "example_graphql_social",
    name: "Social Media GraphQL API",
    type: "graphql",
    template: "graphql-social-template",
    nodes: [
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 100 },
        data: {
          label: "GraphQL Endpoint",
          type: "graphql-endpoint",
          category: "Endpoints",
          description: "Main GraphQL endpoint",
          icon: "Database",
          color: "bg-purple-500",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 100, y: 200 },
        data: {
          label: "GraphQL Playground",
          type: "graphql-playground",
          category: "Endpoints",
          description: "Interactive GraphQL IDE",
          icon: "Globe",
          color: "bg-indigo-500",
          inputs: 0,
          outputs: 0,
        },
      },
      {
        id: "3",
        type: "apiNode",
        position: { x: 350, y: 100 },
        data: {
          label: "Query Resolver",
          type: "query-resolver",
          category: "Processing",
          description: "Resolve user queries",
          icon: "Download",
          color: "bg-blue-500",
          inputs: 1,
          outputs: 1,
        },
      },
      {
        id: "4",
        type: "apiNode",
        position: { x: 350, y: 200 },
        data: {
          label: "Mutation Resolver",
          type: "mutation-resolver",
          category: "Processing",
          description: "Resolve user mutations",
          icon: "Upload",
          color: "bg-green-500",
          inputs: 1,
          outputs: 1,
        },
      },
      {
        id: "5",
        type: "apiNode",
        position: { x: 600, y: 150 },
        data: {
          label: "Schema Definition",
          type: "schema-definition",
          category: "Processing",
          description: "GraphQL schema types",
          icon: "FileText",
          color: "bg-teal-500",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "6",
        type: "apiNode",
        position: { x: 850, y: 150 },
        data: {
          label: "Database",
          type: "database",
          category: "Database",
          description: "User data storage",
          icon: "Database",
          color: "bg-emerald-400",
          inputs: 2,
          outputs: 1,
        },
      },
    ],
    edges: [
      {
        id: "e1-3",
        source: "1",
        target: "3",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e1-4",
        source: "1",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e3-5",
        source: "3",
        target: "5",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e4-5",
        source: "4",
        target: "5",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e5-6",
        source: "5",
        target: "6",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
    ],
  },

  // WebSocket Example Project
  example_websocket_chat: {
    id: "example_websocket_chat",
    name: "Real-time Chat WebSocket API",
    type: "websocket",
    template: "websocket-chat-template",
    nodes: [
      {
        id: "1",
        type: "apiNode",
        position: { x: 100, y: 100 },
        data: {
          label: "WebSocket Server",
          type: "websocket-server",
          category: "Endpoints",
          description: "Main WebSocket endpoint",
          icon: "MessageSquare",
          color: "bg-green-500",
          inputs: 0,
          outputs: 1,
        },
      },
      {
        id: "2",
        type: "apiNode",
        position: { x: 350, y: 100 },
        data: {
          label: "Room Manager",
          type: "room-manager",
          category: "Processing",
          description: "Manage chat rooms",
          icon: "Users",
          color: "bg-purple-500",
          inputs: 1,
          outputs: 2,
        },
      },
      {
        id: "3",
        type: "apiNode",
        position: { x: 350, y: 200 },
        data: {
          label: "Broadcast Service",
          type: "broadcast",
          category: "Processing",
          description: "Broadcast messages",
          icon: "Bell",
          color: "bg-orange-500",
          inputs: 1,
          outputs: 1,
        },
      },
      {
        id: "4",
        type: "apiNode",
        position: { x: 600, y: 150 },
        data: {
          label: "Connection Pool",
          type: "connection-pool",
          category: "Processing",
          description: "Manage connections",
          icon: "Layers",
          color: "bg-indigo-500",
          inputs: 1,
          outputs: 1,
        },
      },
      {
        id: "5",
        type: "apiNode",
        position: { x: 850, y: 150 },
        data: {
          label: "Database",
          type: "database",
          category: "Database",
          description: "Chat message storage",
          icon: "Database",
          color: "bg-emerald-400",
          inputs: 2,
          outputs: 1,
        },
      },
    ],
    edges: [
      {
        id: "e1-2",
        source: "1",
        target: "2",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e1-3",
        source: "1",
        target: "3",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e2-4",
        source: "2",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e3-4",
        source: "3",
        target: "4",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
      {
        id: "e4-5",
        source: "4",
        target: "5",
        sourceHandle: "output-0",
        targetHandle: "input-0",
      },
    ],
  },
};

export default exampleProjectData;
